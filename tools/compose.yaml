# this file contains a few env variables that you have to manually set in portainer or replace before deploy with the actual text
# - ${DOCKER_DATA_BASEFOLDER}

services:
  convertx:
    image: ghcr.io/c4illin/convertx
    container_name: convertx
    restart: always
    ports:
      - "3003:3000"
    environment: # Defaults are listed below. All are optional.
      - ACCOUNT_REGISTRATION=false # true or false, doesn't matter for the first account (e.g. keep this to false if you only want one account)
      #- JWT_SECRET=aLongAndSecretStringUsedToSignTheJSONWebToken1234 # will use randomUUID() by default
      - HTTP_ALLOWED=true # setting this to true is unsafe, only set this to true locally
      - ALLOW_UNAUTHENTICATED=false # allows anyone to use the service without logging in, only set this to true locally
      - AUTO_DELETE_EVERY_N_HOURS=24 # checks every n hours for files older then n hours and deletes them, set to 0 to disable
    volumes:
      - ${DOCKER_DATA_BASEFOLDER}/convertx:/app/data

  filebrowser:
    container_name: filebrowser
    environment:
      - PGID=1000
      - PUID=1000
    image: filebrowser/filebrowser:s6
    ports:
      - "8085:80"
    restart: always
    volumes:
      - ${DOCKER_DATA_BASEFOLDER}/test:/srv
      - ${DOCKER_DATA_BASEFOLDER}/filebrowser/filebrowser.db:/database/filebrowser.db

  scrutiny:
    cap_add:
      - SYS_RAWIO
    container_name: scrutiny
    devices:
      - /dev/sda
    image: ghcr.io/analogj/scrutiny:master-omnibus
    ports:
      - "8083:8080"
      - "8086:8086"
    restart: always
    stdin_open: true
    tty: true
    volumes:
      - ${DOCKER_DATA_BASEFOLDER}/scrutiny/config:/opt/scrutiny/config
      - ${DOCKER_DATA_BASEFOLDER}/scrutiny/influxdb2:/opt/scrutiny/influxdb
      - /run/udev:/run/udev:ro

  speedtest-tracker:
    container_name: speedtest-tracker
    ports:
      - 8084:80
      # - 8443:443
    environment:
      - PUID=1000
      - PGID=1000
      - DB_CONNECTION=sqlite
      - APP_KEY=base64:xz6aCq7elg5Di1WCbBfCGdnXjtf9wQV3Ly3tERwQaGI=
      - APP_TIMEZONE=Europe/Rome
      - DISPLAY_TIMEZONE=Europe/Rome
      - SPEEDTEST_SCHEDULE=*/30 * * * * # can be represented as a cron schedule same as before.
      #- SPEEDTEST_SERVERS= # you can add one or many servers separated by a comma (i.e. "123456,654321,987654").
      - PRUNE_RESULTS_OLDER_THAN=0 # the default is 0 which disables result pruning, this value is in days.
    volumes:
      - ${DOCKER_DATA_BASEFOLDER}/speedtest-tracker:/config
      # - /path/to-custom-ssl-keys:/config/keys
    image: linuxserver/speedtest-tracker:latest
    restart: always

  stirling-pdf:
    container_name: stirling-pdf
    #different tags explaination -> https://github.com/Stirling-Tools/Stirling-PDF/blob/main/Version-groups.md
    image: stirlingtools/stirling-pdf:latest
    ports:
      - "8082:8080"
    volumes:
      - ${DOCKER_DATA_BASEFOLDER}/stirling-pdf/tessdata:/usr/share/tessdata #Required for extra OCR languages
      - ${DOCKER_DATA_BASEFOLDER}/stirling-pdf/configs:/configs
      - ${DOCKER_DATA_BASEFOLDER}/stirling-pdf/customFiles:/customFiles/
      - ${DOCKER_DATA_BASEFOLDER}/stirling-pdf/logs:/logs/
      - ${DOCKER_DATA_BASEFOLDER}/stirling-pdf/pipeline:/pipeline/
    environment:
      - DOCKER_ENABLE_SECURITY=false
      - INSTALL_BOOK_AND_ADVANCED_HTML_OPS=false
      - LANGS=en_GB
    restart: always

  telegram-files:
    container_name: telegram-files
    image: ghcr.io/jarvis2f/telegram-files:latest
    restart: always
    # Default use 1000:1000 for user:group. If you want to use root, uncomment the line below.
    # user: "root"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1/api/health" ]
      interval: 30s
      retries: 3
      timeout: 10s
      start_period: 10s
    environment:
      APP_ENV: "prod"
      APP_ROOT: "/app/data"
      TELEGRAM_API_ID: ${TELEGRAM_API_ID}
      TELEGRAM_API_HASH: ${TELEGRAM_API_HASH}
    ports:
      - "6543:80"
    volumes:
      - ${DOCKER_DATA_BASEFOLDER}/tg-files:/app/data
      - ${DOCKER_MEDIA_BASEFOLDER}/telegram:/media

  upsnap:
    image: ghcr.io/seriousm4x/upsnap:latest
    container_name: upsnap
    network_mode: host
    restart: always
    volumes:
      - ${DOCKER_DATA_BASEFOLDER:-/mnt/docker-volumes}/upsnap/data:/app/pb_data
    environment:
      - TZ=Europe/Rome # Set container timezone for cron schedules
      - UPSNAP_INTERVAL=@every 10s # Sets the interval in which the devices are pinged
      - UPSNAP_SCAN_RANGE=192.168.0.0/24 # Scan range is used for device discovery on local network
      - UPSNAP_WEBSITE_TITLE=UpSnap # Custom website title
    entrypoint: /bin/sh -c "./upsnap serve --http 0.0.0.0:5001"
    #entrypoint: /bin/sh -c "apk update && apk add --no-cache <YOUR_PACKAGE> && rm -rf /var/cache/apk/* && ./upsnap serve --http 0.0.0.0:8090"
    healthcheck:
      test: curl -fs "http://localhost:5001/api/health" || exit 1
      interval: 10s

  web-check:
    container_name: Web-Check
    image: lissy93/web-check
    ports:
      - 3006:3000
    restart: unless-stopped
