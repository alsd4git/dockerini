version: "3"

# this file contains a few env variables that you have to manually set in portainer or replace before deploy with the actual text
# - ${DOCKER_DATA_BASEFOLDER}
# - ${DOCKER_MEDIA_BASEFOLDER}
# - ${DOCKER_LOCAL_IP}
# - ${SONARR_API_KEY}
#TODO: add bazarr and maybe other *arr

services:
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    volumes:
      - ${DOCKER_DATA_BASEFOLDER}/sonarr/config:/config
      - ${DOCKER_MEDIA_BASEFOLDER}:/media
    ports:
      - 8989:8989
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:8989"]
      interval: 30s
      timeout: 10s
      retries: 5

  mainkronos:
    container_name: animedownloader
    image: ghcr.io/mainkronos/anime_downloader:latest
    volumes:
      - ${DOCKER_DATA_BASEFOLDER}/animedownloader/data:/src/database/
      - ${DOCKER_DATA_BASEFOLDER}/animedownloader/connections:/src/script
      - ${DOCKER_MEDIA_BASEFOLDER}/tvseries:/media/tvseries #this has to be the same as the one in sonarr
      - ${DOCKER_MEDIA_BASEFOLDER}/downloads:/downloads
    ports:
      - 5000:5000
#    dns:
#      - 8.8.8.8
    environment:
      - SONARR_URL=http://${DOCKER_LOCAL_IP}:8989
      - API_KEY=${SONARR_API_KEY}
      - TZ=Europe/Rome
      - PUID=1000
      - PGID=1000
    restart: always
    depends_on:
      sonarr:
        condition: service_healthy

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
    volumes:
      - ${DOCKER_DATA_BASEFOLDER}/radarr:/config
      - ${DOCKER_MEDIA_BASEFOLDER}:/media
    ports:
      - 7878:7878
    restart: unless-stopped

  # jackett:
  #   container_name: jackett
  #   image: lscr.io/linuxserver/jackett:latest
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Europe/Rome
  #     - AUTO_UPDATE=true
  #   volumes:
  #     - ${DOCKER_DATA_BASEFOLDER}/jackett:/config
  #     - ${DOCKER_MEDIA_BASEFOLDER}/downloads:/downloads
  #   ports:
  #     - 9117:9117

  #   labels:
  #     diun.enable: false
  #   restart: unless-stopped

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ${DOCKER_DATA_BASEFOLDER}/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/London
    ports:
      - "${PORT:-8191}:8191"
    restart: unless-stopped

  jellyfin:
    container_name: jellyfin
    image: linuxserver/jellyfin:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Rome
      - JELLYFIN_PublishedServerUrl=${DOCKER_LOCAL_IP} #optional
    volumes:
      - ${DOCKER_DATA_BASEFOLDER}/jellyfin/library:/config
      - ${DOCKER_MEDIA_BASEFOLDER}:/media
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
    devices:
      - dev/dri:/dev/dri
    restart: unless-stopped

  jellyseerr:
    container_name: jellyseerr
    image: fallenbagel/jellyseerr:latest
    environment:
      - LOG_LEVEL=debug
      - TZ=Europe/Rome
    ports:
      - 5055:5055
    volumes:
      - ${DOCKER_DATA_BASEFOLDER}/jellyseerr/config:/app/config
    restart: unless-stopped
